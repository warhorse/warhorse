---
- name: Deploy Terraform
  hosts: localhost
  gather_facts: false
  connection: local
  environment: 
    ANSIBLE_VAULT_PASSWORD: "{% raw %}{{ warhorse.general.vault_key }}{% endraw %}"
  vars: 
    deploy: true
  vars_files:
  - ../../config.yml
  roles:
    - { role: warhorse.terraform }

- name: Refresh Inventory
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
  - meta: refresh_inventory
  - name: Wait for system to become reachable again
    wait_for_connection:
        delay: 10
        timeout: 300

- name: Apt Ready
  gather_facts: yes
  hosts: warhorse
  connection: ssh
  become: True
  vars: 
    deploy: true
  tasks:
  - name: Apt for sure
    apt: update_cache=yes
    register: apt_status
    until: apt_status is success
    delay: 10
    retries: 10 
{% for vm in warhorse.vm %}   
- name: Install Roles
  gather_facts: yes
  hosts: warhorse
  connection: ssh
  environment: 
    ANSIBLE_VAULT_PASSWORD: "{% raw %}{{ warhorse.general.vault_key }}{% endraw %}"
  become: True
  vars_files:
  - ../../config.yml
  vars: 
    deploy: true
  roles:
    - { role: weareinteractive.users }
    - { role: geerlingguy.pip }
    - { role: geerlingguy.docker }
    - { role: warhorse.os }
    - { role: geerlingguy.ntp }
    - { role: geerlingguy.security }
{% if vm.tailscale.tailscale_auth_key is defined and vm.tailscale.enabled %}
    - { role: artis3n.tailscale }
{% endif %}
{% if vm.backup is defined and vm.backup.enabled %}
    - { role: arillso.restic }
{% endif %}
{% endfor %}

{% for vm in warhorse.vm %}
- name: Install Modules
  gather_facts: True
  hosts: {{ vm.name }}
  connection: ssh
  environment: 
    ANSIBLE_VAULT_PASSWORD: "{% raw %}{{ warhorse.general.vault_key }}{% endraw %}"
  become: True
  vars_files:
  - ../../config.yml
  vars: 
    deploy: true
  roles:
{% if vm.golang is defined and vm.golang.enabled %}
    - { role: gantsign.golang }
{% endif %}
{% if vm.http_proxy is defined and vm.http_proxy == "traefik" %}
    - { role: warhorse.traefik_docker }
{% endif %}
{% if vm.http_proxy is defined and vm.http_proxy == "nginx" %}
    - { role: warhorse.nginx_docker }
{% endif %}
{% if vm.cobaltstrike is defined and vm.cobaltstrike.enabled %}
    - { role: warhorse.cobaltstrike_docker }
{% endif %}
{% if vm.gophish is defined and vm.gophish.enabled %}
    - { role: warhorse.gophish_docker }
{% endif %}
{% if vm.mythic is defined and vm.mythic.enabled %}
    - { role: t94j0.mythic }
{% endif %}
{% if vm.neo4j is defined and vm.neo4j.enabled %}
    - { role: warhorse.neo4j_docker }
{% endif %}
{% if vm.syncthing is defined and vm.syncthing.enabled %}
    - { role: warhorse.syncthing_docker }
{% endif %}
{% if vm.tailscale is defined and vm.tailscale.enabled %}
    - { role: warhorse.tailscale }
{% endif %}
{% if vm.dashy is defined and vm.dashy.enabled %}
    - { role: warhorse.dashy_docker }
{% endif %}
{% if vm.evilginx2 is defined and vm.evilginx2.enabled %}
    - { role: warhorse.evilginx2_docker }
{% endif %}
{% if vm.nighthawk is defined and vm.nighthawk.enabled %}
    - { role: warhorse.nighthawk_docker }
{% endif %}
{% endfor %}

{% if warhorse.general.deployment_txt is undefined or warhorse.general.deployment_txt is true %}
- name: Deployment Extras
  gather_facts: yes
  hosts: warhorse
  connection: ssh
  environment: 
    ANSIBLE_VAULT_PASSWORD: "{% raw %}{{ warhorse.general.vault_key }}{% endraw %}"
  become: True
  vars_files:
  - ../../config.yml
  vars: 
    deploy: true
  roles:
    - { role: warhorse.deployment }
{% if warhorse.notification.email is defined %}
    - { role: warhorse.notification }
{% endif %}
{% endif %}